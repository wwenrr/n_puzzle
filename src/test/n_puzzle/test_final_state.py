from src.service.n_puzzle.final_state import form_A, form_B
from src.service.n_puzzle.main        import generate_initial_state
from src.service.n_puzzle.main        import generate_goal_sum

def test_form_A():
    assert form_A(3) == [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 0],
    ]

    assert form_A(4) == [
        [1, 2, 3, 4],
        [5, 6, 7, 8],
        [9, 10, 11, 12],
        [13, 14, 15, 0],
    ]

    assert form_A(5) == [
        [1, 2, 3, 4, 5],
        [6, 7, 8, 9, 10],
        [11, 12, 13, 14, 15],
        [16, 17, 18, 19, 20],
        [21, 22, 23, 24, 0],
    ]

    for n in range(7, 50):
        result = [[(i * n + j + 1) if (i != n - 1 or j != n - 1) else 0 for j in range(n)] for i in range(n)]
        assert form_A(n) == result

def test_form_B():
    assert form_B(3) == [
        [1, 2, 3],
        [8, 0, 4],
        [7, 6, 5]
    ]

    assert form_B(4) == [
        [1, 2, 3, 4],
        [12, 13, 14, 5],
        [11, 0, 15, 6],
        [10, 9, 8, 7]
    ]

    assert form_B(5) == [
        [1, 2, 3, 4, 5],
        [16, 17, 18, 19, 6],
        [15, 24, 0, 20, 7],
        [14, 23, 22, 21, 8],
        [13, 12, 11, 10, 9]
    ]

    assert form_B(6) == [
        [1, 2, 3, 4, 5, 6],
        [20, 21, 22, 23, 24, 7],
        [19, 32, 33, 34, 25, 8],
        [18, 31, 0, 35, 26, 9],
        [17, 30, 29, 28, 27, 10],
        [16, 15, 14, 13, 12, 11]
    ]

    assert form_B(7) == [
        [1, 2, 3, 4, 5, 6, 7],
        [24, 25, 26, 27, 28, 29, 8],
        [23, 40, 41, 42, 43, 30, 9],
        [22, 39, 48, 0, 44, 31, 10],
        [21, 38, 47, 46, 45, 32, 11],
        [20, 37, 36, 35, 34, 33, 12],
        [19, 18, 17, 16, 15, 14, 13]
    ]

    assert form_B(8) == [
        [1, 2, 3, 4, 5, 6, 7, 8],
        [28, 29, 30, 31, 32, 33, 34, 9],
        [27, 48, 49, 50, 51, 52, 35, 10],
        [26, 47, 60, 61, 62, 53, 36, 11],
        [25, 46, 59, 0, 63, 54, 37, 12],
        [24, 45, 58, 57, 56, 55, 38, 13],
        [23, 44, 43, 42, 41, 40, 39, 14],
        [22, 21, 20, 19, 18, 17, 16, 15]
    ]